#root {
  --screen-padding: 10px;

  background: linear-gradient(#00f, #f00);
  background-attachment: fixed;
  color: white;

  box-sizing: border-box;
  height: 100vh;
  overflow: auto;
  padding: var(--screen-padding);
}

button {
  cursor: pointer;
  border: none;
  padding: 0.5em 0.8em;

  &:hover {
    filter: brightness(0.8);
  }
  &:active {
    filter: brightness(0.7);
  }
}

h1 {
  font-size: 1.5em;
  margin-block: 0.5em;
}

p {
  margin: 0;
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

a {
  color: aqua;

  &:visited {
    color: #0a0;
  }

  &:active {
    color: red;
  }
}

.button-link {
  text-decoration: none;
  display: block;
  padding: 0.5em;
  color: inherit;
  border: 1px solid #fff2;
  background: #fff1;

  &:visited {
    color: inherit;
  }

  &:hover {
    background: #fff3;
  }

  &:active {
    background: none;
  }

  &.button-highlight {
    background: #0f05;
  }
}

.clipped-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.bold {
  font-weight: bold;
}

.icon {
  line-height: 1;
  height: 1em;
  aspect-ratio: 1;
  padding: 0;

  display: flex;
  justify-content: center;
  align-items: center;
}

@keyframes blink {
  from {
    background: yellow;
  }
}

.blink {
  animation-name: blink;
  animation-duration: 1s;
}

.status {
  &::before {
    content: "●";
    margin-right: 5px;
  }

  &.online::before {
    color: green;
  }

  &.offline::before {
    color: black;
  }
}

.button-bar {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.7em;
}

nav .button-bar {
  column-gap: 1.4em;
}

.layout {
  display: flex;
  flex-direction: column;
  row-gap: 0.4em;

  height: 100%;

  .outlet {
    flex: 1;

    /*Prevent 'flex overflow failure'.
      When a container overflows, and it's overflow dimension is determined by it's parent(flex container), and the parent's same dimension is determined by the grandparent(flex/grid fr), overflow failure happens.
      The parent needs a dim(width/height), min-dim, or max-dim property set to some numerical value to prevent this failure.
      I don't know why flex behaves like this.
    */
    min-height: 0;

    overflow: auto;
    padding: 5px;

    .room {
      height: 100%;
    }
  }
}

.home {
  padding-right: 5px;

  > p {
    margin-block: 10px;
  }
}

.auth-page {
  display: flex;
  flex-direction: column;
  align-items: center;

  form + p {
    margin-top: 1.5em;
    font-size: 1.2em;
  }
}

.auth-page form {
  max-width: 100%;
  width: 40ch;

  ul {
    font-size: 1.2em;
  }

  ul li {
    display: flex;
    flex-direction: column;
    row-gap: 5px;

    position: relative;
    margin-bottom: 1em;
  }

  label {
    font-weight: bold;
  }

  label::after {
    content: "";
    display: block;
    position: absolute;

    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
  }

  input {
    z-index: 0;
    padding: 0.5em;
  }

  button[type="submit"] {
    background: #0f0;
  }

  button.show-password {
    background: transparent;
    color: #ddd;
    padding: 0;

    position: absolute;
    top: 0;
    right: 0;
  }

  output {
    display: block;
    padding: 10px;
    background: #0003;
  }
}

.friend-overview {
  text-align: center;

  h2 {
    font-size: 1.3em;
    margin-block: 0 10px;
  }

  section {
    border-top: 1px solid white;
    margin-bottom: 30px;
    padding: 10px;
  }
}

.friend-list {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 5px;

  > li {
    width: 50ch;
    max-width: 100%;
    background: #0f03;
    padding: 5px;
    text-align: start;

    .name {
      font-weight: bold;
      margin-bottom: 5px;
    }

    .details {
      display: flex;
      align-items: center;
      justify-content: space-between;
      column-gap: 5px;
    }
  }
}

.confirmation-dialog {
  .name {
    font-weight: bold;
  }

  ul {
    display: flex;
    justify-content: center;
    column-gap: 2em;

    margin-top: 1em;

    button {
      font-size: 1.2em;
      background: #ddd;
      border: 1px solid grey;
    }
  }
}

.user-list {
  --background: #0005;

  width: 100%;
  margin-top: 1em;

  tbody {
    display: grid;
    grid-auto-rows: 1fr;
    grid-template-columns: 2fr 3fr auto;
  }

  tr {
    display: contents;
  }

  tr:nth-child(2n + 1) td {
    background: var(--background);
  }

  td {
    display: flex;
    align-items: center;

    padding: 0.4em;

    /*Prevent 'flex child overflow failure'.*/
    min-width: 0;
  }
}

.room-info {
  padding: 5px;
  padding-right: 10px;
  overflow: auto;
}

.room-info-header {
  display: flex;
  justify-content: space-between;
  align-items: center;

  border-bottom: 1px solid white;
  margin-bottom: 10px;

  p {
    font-size: 1.2em;
    font-weight: bold;
  }

  button {
    background: transparent;
    color: yellow;
    font-weight: bold;
    font-size: 2em;

    &:hover {
      background: #fff2;
    }

    &:active {
      background: #fff3;
    }
  }
}

.group-create-date {
  margin-block: 10px;
}

section.member {
  & > p {
    font-size: 1.1em;
    font-weight: bold;
    margin-bottom: 5px;
  }
}

.member-list {
  width: 100%;

  tbody {
    display: grid;
    grid-auto-rows: 1fr;
    grid-template-columns: 1fr auto;
  }

  tr {
    display: contents;
  }

  td {
    padding: 1px;
    padding-right: 5px;

    &:last-child {
      padding-right: 1px;
    }
  }

  tr:nth-child(2n + 1) td {
    background: #fff1;
  }

  tr:first-child td {
    background: #0f05;
  }
}

.chat-list {
  font-size: 1rem;
  color: #ccc;
  border: 1px solid white;
  padding: 5px;
  overflow: auto;

  .button-link {
    cursor: default;
    background: none;
    border: none;

    &:hover {
      background: #fff3;
    }

    &.button-highlight {
      background: #0f05;
    }
  }

  .chat-item-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    column-gap: 5px;

    margin-bottom: 5px;

    & > p {
      font-size: 1.4em;
      color: white;
      font-weight: bold;
    }
  }
}

.chat-item-header-right {
  width: max-content;
  position: relative;
  flex: none;

  display: flex;
  align-items: center;
  column-gap: 5px;

  > button {
    background-color: transparent;
    color: white;
    font-size: 1.4rem;
    font-weight: bold;
    padding: 0;

    &:hover {
      filter: brightness(0.5);
    }
  }
}

.chat-item-content {
  display: flex;
  align-items: center;

  .chat-item-name {
    flex: none;
    max-width: 16ch;
  }

  .chat-item-separator {
    white-space: pre;
    font-weight: bold;
  }
}

.chat-item-menu {
  --edge-highlight: 2px solid yellow;

  position: absolute;
  z-index: 1;

  /*Initial position to avoid auto overflow before the actual position is calculated.*/
  right: 0;
  bottom: 0;

  /*Starts off hidden so that it is displayed only after position is calculated */
  visibility: hidden;

  width: max-content;
  padding-block: 5px;

  background-color: #222;
  border-top: var(--edge-highlight);

  &.bottom-edge {
    border-top: none;
    border-bottom: var(--edge-highlight);
  }

  button {
    background-color: inherit;
    color: white;
    width: 100%;
    text-align: start;

    &:hover {
      background-color: #333;
      filter: none;
    }

    &:active {
      filter: brightness(0.8);
    }
  }
}

.room {
  display: flex;
  column-gap: 10px;

  > .narrow-width {
    --width: 40ch;

    box-sizing: border-box;
    font-size: 1rem;
    width: var(--width);
    flex: none;

    border: none;
    border-right: 1px solid white;
  }

  > .wide-width {
    flex: 1;

    /*Prevent 'flex overflow failure'.*/
    min-width: 0;
  }
}

.room-interface {
  display: flex;
  flex-direction: column;
  row-gap: 5px;
}

button.room-header {
  background: transparent;
  color: inherit;
  padding-block: 0;
  text-align: center;

  &:hover {
    background: #fff2;
  }
  &:active {
    background: #fff3;
  }

  h1 {
    margin: 0;
  }

  p {
    font-size: 0.8em;
    color: #aaa;
  }
}

.message-list {
  display: flex;
  flex-direction: column;

  flex: 1;
  overflow: auto;
  scroll-behavior: smooth;

  /*create gap between scrollbar and contents*/
  padding-right: 5px;

  & > * {
    overflow-anchor: none;
  }

  .anchor {
    overflow-anchor: auto;
    height: 1px;
    flex: none;
  }
}

.message-date {
  background: black;
  color: #999;

  max-width: max-content;
  padding: 5px 10px;
  margin-inline: auto;
  margin-block-start: 20px;

  border-radius: 10px;
}

.message-box {
  --min-width: 12ch;
  --margin-inline-large: 7ch;
  --margin-inline-small: 10px;
  --border-radius: 15px;
  --background: #111;
  --font-size: 1.2rem;

  background: var(--background);
  font-size: var(--font-size);

  box-sizing: border-box;
  max-width: max-content;
  min-width: var(--min-width);
  padding: 10px;
  margin-block-start: 7px;
  margin-inline: var(--margin-inline-small) var(--margin-inline-large);

  border-radius: var(--border-radius);
  border-top-left-radius: 0;

  position: relative;
  z-index: 0;

  &.user-owned {
    --background: #020;

    align-self: end;
    margin-inline: var(--margin-inline-large) var(--margin-inline-small);

    border-top-left-radius: var(--border-radius);
    border-top-right-radius: 0;

    &::before {
      left: auto;
      right: calc(-1 * var(--arrow-width));
    }
  }

  &.joined-message {
    margin-block-start: 2px;
    border-radius: var(--border-radius);

    &::before {
      display: none;
    }
  }

  & > div {
    display: flex;
    column-gap: 0.5em;
    justify-content: space-between;
  }

  .message-sender {
    color: orange;
    margin-block-end: 5px;
  }

  .message-footer {
    color: #aaa;
    font-size: 0.8em;

    align-self: end;
    position: relative;
    top: 5px;
  }
}

.message-box::before {
  --arrow-width: 10px;

  content: "";
  display: block;
  position: absolute;
  z-index: -1;

  border-top: 7px solid var(--background);
  border-left: var(--arrow-width) solid transparent;
  border-right: var(--arrow-width) solid transparent;

  top: 0;
  left: calc(-1 * var(--arrow-width));
}

.messaging-form {
  display: flex;
  gap: 1em;

  font-size: 1.2em;

  input {
    background: #111;
    color: white;
    border: none;

    padding: 0.5em 1em;
    border-radius: 1em;
    flex: 1;
    min-width: 0;

    &:hover {
      filter: brightness(1.5);
    }

    &::placeholder {
      color: #aaa;
    }
  }

  button {
    background: #0f0;
    font-weight: bold;

    padding-inline: 1em;
    border-radius: 1em;

    &:hover {
      filter: brightness(0.7);
    }

    &:active {
      filter: brightness(0.6);
    }
  }
}

/*Switch layout for .room when width decreases.
  Breakpoint is the sum of the width of all major fixed-width items, plus appropriate width for all major flexible-width items.
  Minor widths are ignored for simplicity.

  Breakpoint:
    + room-first-child-width
    + (appropriate-message-width + message-margin-inline-large) * message-font-size
*/
@media (max-width: calc(40ch + (40ch + 7ch) * 1.2)) {
  .room {
    > .low-priority-display {
      display: none;
    }
  }
}

/*Switch layout for .user-list when width decreases.
  Breakpoint is an arbitrary value by approximate character counts.
  Value is to be changed, if the length of content changes.
*/
@media (max-width: 80ch) {
  .user-list {
    tbody {
      grid-template-columns: 1fr;
    }

    tr {
      display: flex;
      flex-direction: column;
      row-gap: 0.4em;

      padding: 0.7em;
      border: 1px solid white;
      border-bottom: none;

      &:last-child {
        border-bottom: 1px solid white;
      }

      /*Prevent 'flex overflow failure'.*/
      min-width: 0;
    }

    tr:nth-child(2n + 1) {
      background: var(--background);

      td {
        background: initial;
      }
    }

    td:empty {
      display: none;
    }

    td {
      padding: 0;
    }
  }
}
